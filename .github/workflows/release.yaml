name: Render and Release CV

on:
  push:
    branches:
      - main
  workflow_call: # to make the workflow triggerable from other workflows (release.yaml)

permissions:
  contents: write

jobs:
  convert_json_to_yaml:
    name: Convert JSON to YAML
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure src directory exists
        run: mkdir -p ./src

      - name: Convert JSON to YAML
        uses: fabasoad/data-format-converter-action@v0
        id: json2yaml
        with:
          input: "./src/ValentinGuigon_CV.json"
          from: "json"
          to: "yaml"

      - name: Save YAML to File
        run: echo "${{ steps.json2yaml.outputs.output }}" > ./src/ValentinGuigon_CV.yaml

      - name: Verify YAML file
        run: ls -l ./src/ValentinGuigon_CV.yaml # Check if the ValentinGuigon_CV.yaml file exists and its details

  rendercv:
    name: RenderCV
    runs-on: ubuntu-latest
    needs: convert_json_to_yaml
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install RenderCV
        run: |
          pip install -r requirements.txt
      - name: RenderCV
        run: |
          cd src
          cv_file=$(find .  -maxdepth 1 -type f -name "*_CV.yaml" | head -n 1)
          if [ -z "$cv_file" ]; then
            echo "No RenderCV file found!"
            exit 1
          fi
          cd ..
          rendercv render src/$cv_file --pdf-path ${cv_file%.yaml}.pdf --markdown-path README.md --latex-path ${cv_file%.yaml}.tex
      - name: Upload rendercv_output as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: RenderCV Output
          path: rendercv_output
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          base: HEAD
          filters: |
            cv:
              - '*_CV.tex'
              - 'README.md'
      - name: Push the changes
        if: steps.changes.outputs.cv == 'true'
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          git commit -m "render the latest CV"
          git push

  build:
    name: Build and Release
    needs: rendercv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download RenderCV Output
        uses: actions/download-artifact@v4
        with:
          name: RenderCV Output
          path: rendercv_output
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            rendercv_output/*_CV.pdf
            rendercv_output/*_CV.tex
          generate_release_notes: true
          make_latest: true
